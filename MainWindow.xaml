<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:radikaltoolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:radikalClockWindow="clr-namespace:WpfControlLibrary1;assembly=Clock"
        xmlns:radikalscichart="http://schemas.abtsoftware.co.uk/scichart"
        xmlns:local="clr-namespace:WpfApp1"
        xmlns:dxga="http://schemas.devexpress.com/winfx/2008/xaml/gauges" x:Class="WpfApp1.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="660" Width="1200"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None" Background="Transparent" AllowsTransparency="True">
    <Window.Resources>
        <ImageBrush x:Key="CloseBtn" ImageSource="Images/icons8-close-64.png"/>
        <ImageBrush x:Key="MaxeBtn" ImageSource="Images/icons8-maximize-50.png"/>
        <ImageBrush x:Key="MinBtn" ImageSource="Images/icons8-minimize-window-50.png"/>
        <ImageBrush x:Key="ResetBtn" ImageSource="Images/icons8-restart-64.png"/>
        <ImageBrush x:Key="ResetBtn1" ImageSource="Images/icons8-restart-64.png"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="BtnClose" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CloseBtn}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CloseBtn}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="BtnMax" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MaxeBtn}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MaxeBtn}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="btnMin" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MinBtn}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MinBtn}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border3" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background3" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border3" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="#FF838383"/>
        <Style x:Key="BtnReset" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ResetBtn}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border3}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ResetBtn}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border3}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border3}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground3}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual4">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background4" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border4" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background4" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border4" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background4" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border4" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background4" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border4" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground4" Color="#FF838383"/>
        <Style x:Key="BtnReset1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual4}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background4}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border4}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ResetBtn1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border4}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ResetBtn1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border4}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background4}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border4}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground4}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Border Background="#FF444444"
            BorderBrush="#FFFA5252" 
            BorderThickness="2.5" 
            CornerRadius="15"  >


        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>



            <!--نوار بالا-->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="115"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="45"/>
                    <ColumnDefinition Width="45"/>
                    <ColumnDefinition Width="45"/>
                </Grid.ColumnDefinitions>
                <Button Style="{StaticResource BtnClose}" Grid.Column="4" Width="40" Height="40" BorderBrush="Transparent" Grid.Row="0" Click="BtnClose_OnClick">
                    <Button.Background>
                        <ImageBrush  ImageSource="Images/icons8-close-64.png" Stretch="UniformToFill"/>
                    </Button.Background>
                </Button>
                <Button  Click="BtnMaximize_OnClick" Style="{DynamicResource BtnMax}"  Grid.Column="3" Width="40" Height="40"  BorderThickness="0" Grid.Row="0">
                    <Button.Background>
                        <ImageBrush  ImageSource="Images/icons8-maximize-50.png" Stretch="UniformToFill"/>
                    </Button.Background>
                </Button>
                <Button Click="BtnMinimize_OnClick" Style="{DynamicResource btnMin}"  Grid.Column="2" Width="40" Height="40"  BorderThickness="0" Grid.Row="0">
                    <Button.Background>
                        <ImageBrush  ImageSource="Images/icons8-minimize-window-50.png" Stretch="UniformToFill"/>
                    </Button.Background>
                </Button>

                <Rectangle Name="RecTop" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Fill="#FF444444"  MouseDown="UIElement_OnMouseDown" RadiusX="18.5" RadiusY="18.5"  />
                <Label Grid.Row="0" Grid.Column="0"  Content="Test Bobbin V 1.1" Margin="2.5" Foreground="White" FontWeight="Bold"/>
            </Grid>



            <!--ایجاد منوی New Open Save-->
            <Grid Grid.Row="1">
                <ToolBarTray>
                    <ToolBar>
                        <Button x:Name="BtnNew" Click="BtnNew_OnClick">
                            <WrapPanel>
                                <Label Content="New" VerticalContentAlignment="Center"/>
                                <Image Source="Images/icons8-new-file-50.png" Stretch="Uniform" Width="25"/>
                            </WrapPanel>
                        </Button>
                        <Button x:Name="BtnOpen" Click="BtnOpen_OnClick">
                            <WrapPanel>
                                <Label Content="Open" VerticalContentAlignment="Center"/>
                                <Image Source="Images/icons8-open-file-50.png" Stretch="Uniform" Width="25"/>
                            </WrapPanel>
                        </Button>

                        <Button x:Name="BtnSave" Click="BtnSave_OnClick">
                            <WrapPanel>
                                <Label Content="Save" VerticalContentAlignment="Center"/>
                                <Image Source="Images/icons8-save-50.png" Stretch="Uniform" Width="25"/>
                            </WrapPanel>
                        </Button>
                    </ToolBar>
                </ToolBarTray>
            </Grid>


            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="165" />
                </Grid.ColumnDefinitions>

                <!--ستون سمت چپ-->
                <Grid Grid.Column="3" Margin="0,0,0,-73"  >
                    <Grid.RowDefinitions >
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="58"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="54"/>
                        <RowDefinition Height="54"/>
                        <RowDefinition Height="54"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Image Margin="5 2" Source="Images/Nasra1.png"/>
                    <radikalClockWindow:UserControl1 Grid.Row="1"/>
                    <local:HMIDigital x:Name="DigitalClock" Height="52" Margin=" 2 3" Grid.Row="2" DigitalStyle="MagicLight" FontSize="12" Text="05:36:11" TextColor="#FF1FFF00" Count="8"/>
                    <radikalClockWindow:UserControl1 Grid.Row="3"/>
                    <local:HMIDigital Margin="3  2" Grid.Row="4" DigitalStyle="MagicLight" Text="01:47" Count="5" TextColor="#FF1FFF00"/>
                    <local:HMIDigital Margin="3  2" Grid.Row="5" DigitalStyle="MagicLight" Count="3" Text="123" TextColor="#FF1FFF00"/>
                    <local:HMIDigital Margin="3  2" Grid.Row="6" DigitalStyle="MagicLight" TextColor="#FF1FFF00" Count="2" Text="02"/>
                    <Button Height="25" Width="95" Grid.Row="7" Content="Reset"/>
                </Grid>

                <Grid Grid.Column="1" Background="#FF928F8F" >

                    <GroupBox  Header="CH1" BorderBrush="Black" Background="#FFD7E8E6">
                        <Grid>
                            <Grid Background="#FFD7E8E6" Margin="9">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="100"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Canvas Grid.Column="0">
                                        <CheckBox Background="#FFFBBE51" Canvas.Left="25" Canvas.Top="24" Content="6V"  />
                                        <CheckBox Background="#FFFBBE51" Canvas.Left="25" Canvas.Top="52" Content="12V"/>
                                        <CheckBox Background="#FFFBBE51" Canvas.Left="25" Canvas.Bottom="8" Content="18V" />
                                    </Canvas>

                                    <StackPanel Grid.Column="1">
                                        <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="Curent" Margin=".5" Padding="0"/>
                                        <radikaltoolkit:IntegerUpDown Background= "#FFF9FFD5" TextAlignment="Center" Margin="1 3" Width="144"/>
                                        <radikaltoolkit:IntegerUpDown Background= "#FFF9FFD5" TextAlignment="Center" Margin="1 3" Width="144"/>
                                        <radikaltoolkit:IntegerUpDown Background= "#FFF9FFD5" TextAlignment="Center" Margin="1 3" Width="144"/>
                                    </StackPanel>

                                    <StackPanel Grid.Column="2">
                                        <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="Flow" Margin=".5" Padding="0"/>
                                        <radikaltoolkit:IntegerUpDown TextAlignment="Center" Background= "#FFF9FFD5" Margin="1 3" Width="144"/>
                                        <radikaltoolkit:IntegerUpDown TextAlignment="Center" HorizontalContentAlignment="Center"   Text="0" Background="#FFF9FFD5" Margin="1 3" Width="144"/>
                                        <radikaltoolkit:IntegerUpDown TextAlignment="Center" VerticalContentAlignment="Center" Text="30000" Background="#FFF9FFD5" Margin="1 3" Width="144"/>
                                    </StackPanel>
                                </Grid>
                                <radikalscichart:SciChartSurface Grid.Row="1"  x:Name="SciChartSurface" Margin="2">

                                    <radikalscichart:SciChartSurface.RenderableSeries>
                                        <radikalscichart:FastLineRenderableSeries x:Name="LineSeries" Stroke="Red"/>
                                    </radikalscichart:SciChartSurface.RenderableSeries>
                                    <radikalscichart:SciChartSurface.XAxis>
                                        <radikalscichart:NumericAxis/>
                                    </radikalscichart:SciChartSurface.XAxis>
                                    <radikalscichart:SciChartSurface.YAxis>
                                        <radikalscichart:NumericAxis/>
                                    </radikalscichart:SciChartSurface.YAxis>
                                </radikalscichart:SciChartSurface>

                                <Grid Grid.Row="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <local:HMIDigital Grid.Column="0" Height="50"  Width="80" Count="3" Text="123" TextColor="#FF1FFF00"/>
                                    <local:HMIDigital Grid.Column="1" Height="50"  Width="80" Value="123" Count="2" Text="01" FontSize="19" TextColor="#FF1FFF00"/>
                                    <Button Style="{DynamicResource BtnReset1}" Grid.Column="3" BorderBrush="Transparent" Width="60" Name="BtnRest" Height="60">
                                        <Button.Background>
                                            <ImageBrush ImageSource="Images/icons8-restart-64.png"/>
                                        </Button.Background>
                                    </Button>
                                </Grid>
                            </Grid>
                        </Grid>
                    </GroupBox>
                </Grid>
                <Grid  Grid.Column="2" Background="#FF928F8F">

                    <GroupBox  Margin="10 0" Header="CH2" BorderBrush="Black" Background="#FFD7E8E6">
                        <Grid>
                            <Grid Background="#FFD7E8E6" Margin="9">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="100"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Canvas Grid.Column="0">
                                        <CheckBox Background="#FFFBBE51" Canvas.Top="24" Canvas.Left="25" Content="6V"  />
                                        <CheckBox Background="#FFFBBE51" Canvas.Top="52"    Canvas.Left="25"  Content="12V"/>
                                        <CheckBox Background="#FFFBBE51" Canvas.Bottom="8"  Canvas.Left="25"  Content="18V" />
                                    </Canvas>

                                    <StackPanel Grid.Column="1">
                                        <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="Curent" Margin=".5" Padding="0"/>
                                        <radikaltoolkit:IntegerUpDown Background= "#FFF9FFD5" TextAlignment="Center" Margin="1 3" Width="144"/>
                                        <radikaltoolkit:IntegerUpDown Background= "#FFF9FFD5" TextAlignment="Center" Margin="1 3" Width="144"/>
                                        <radikaltoolkit:IntegerUpDown Background= "#FFF9FFD5" TextAlignment="Center" Margin="1 3" Width="144"/>
                                    </StackPanel>

                                    <StackPanel Grid.Column="2">
                                        <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="Flow" Margin=".5" Padding="0"/>
                                        <radikaltoolkit:IntegerUpDown TextAlignment="Center" Background= "#FFF9FFD5" Margin="1 3" Width="144"/>
                                        <radikaltoolkit:IntegerUpDown TextAlignment="Center" HorizontalContentAlignment="Center"   Text="0" Background="#FFF9FFD5" Margin="1 3" Width="144"/>
                                        <radikaltoolkit:IntegerUpDown TextAlignment="Center" VerticalContentAlignment="Center" Text="30000" Background="#FFF9FFD5" Margin="1 3" Width="144"/>
                                    </StackPanel>
                                </Grid>
                                <radikalscichart:SciChartSurface Grid.Row="1" x:Name="SciChartSurface1" Margin="2">

                                    <radikalscichart:SciChartSurface.RenderableSeries>
                                        <radikalscichart:FastLineRenderableSeries x:Name="LineSeries1" Stroke="Red"/>
                                    </radikalscichart:SciChartSurface.RenderableSeries>
                                    <radikalscichart:SciChartSurface.XAxis>
                                        <radikalscichart:NumericAxis/>
                                    </radikalscichart:SciChartSurface.XAxis>
                                    <radikalscichart:SciChartSurface.YAxis>
                                        <radikalscichart:NumericAxis/>
                                    </radikalscichart:SciChartSurface.YAxis>
                                </radikalscichart:SciChartSurface>

                                <Grid Grid.Row="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <local:HMIDigital Grid.Column="0" Height="50"  Width="80" Count="3" Text="123" TextColor="#FF1FFF00"/>
                                    <local:HMIDigital Grid.Column="1" Height="50"  Width="80" Value="123" Count="2" Text="01" FontSize="19" TextColor="#FF1FFF00"/>
                                    <Button Style="{DynamicResource BtnReset}" BorderBrush="Transparent" Grid.Column="3" Width="60" Height="60" Name="BtnRest1">
                                        <Button.Background>
                                            <ImageBrush ImageSource="Images/icons8-restart-64.png"/>
                                        </Button.Background>
                                    </Button>
                                </Grid>
                            </Grid>
                        </Grid>
                    </GroupBox>
                </Grid>
            </Grid>

            <Grid Grid.Row="3">

                <Grid.RowDefinitions>
                    <RowDefinition Height="23"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="Auto"/>
                    <ColumnDefinition  Width="Auto"/>
                    <ColumnDefinition  Width="Auto"/>
                    <ColumnDefinition  Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0" Grid.Column="1" Foreground="White" Content="EndTest" HorizontalContentAlignment="Center"/>
                <Label Grid.Row="0" Grid.Column="2" Foreground="White" Content="Total" HorizontalContentAlignment="Center"/>
                <Label Grid.Row="0" Grid.Column="3" Foreground="White" Content="Falt" HorizontalContentAlignment="Center"/>
                <Label Grid.Row="0" Grid.Column="0" Foreground="White" Content="Start" HorizontalContentAlignment="Center"/>
                <local:HMIDigital Margin="3  2" Width="150" Grid.Row="1" Grid.Column="0" TextColor="#FF1FFF00" Count="8" Text="12:45:00" />
                <local:HMIDigital Margin="3  2" Width="150" Grid.Row="1" Grid.Column="1" TextColor="#FF1FFF00" Count="8" Text="19:45:00" />
                <local:HMIDigital Margin="3  2" Width="150" Grid.Row="1" Grid.Column="2" TextColor="#FF1FFF00" Text="2305" Count="4"/>
                <local:HMIDigital Margin="3  2" Width="150" Grid.Row="1" Grid.Column="3" FontSize="12" Text="123" Count="3" TextColor="#FF1FFF00"/>
            </Grid>
        </Grid>
    </Border>
</Window>
